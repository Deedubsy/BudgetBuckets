rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for authentication
    function signedIn() {
      return request.auth != null;
    }
    
    function isOwner(uid) {
      return request.auth != null && request.auth.uid == uid;
    }
    
    function getUserPlan() {
      return request.auth.token.plan != null ? request.auth.token.plan : 'free';
    }
    
    function validateBucketLimit(counterRef) {
      let currentCount = getAfter(counterRef).data.total;
      let previousCount = get(counterRef).data.total;
      let plan = getUserPlan();
      
      // Allow if Plus plan
      if (plan == 'plus') {
        return true;
      }
      
      // For Free plan, check bucket count increment
      return currentCount == previousCount + 1 && currentCount <= 5;
    }
    
    function validateBucketDecrement(counterRef) {
      let currentCount = getAfter(counterRef).data.total;
      let previousCount = get(counterRef).data.total;
      
      // Allow decrement (delete)
      return currentCount == previousCount - 1;
    }
    
    // User profiles and data
    match /users/{uid} {
      // Users can read/write their own profile
      allow read, write: if isOwner(uid);
      
      // Meta documents (bucket counters)
      match /meta/bucketCounts {
        allow read: if isOwner(uid);
        allow write: if isOwner(uid); // Write validation happens in budget rules
      }
      
      // Budget documents under user
      match /budgets/{budgetId} {
        // Read allowed for owner
        allow read: if isOwner(uid);
        
        // Create: must increment counter and respect limits
        allow create: if isOwner(uid) && validateBucketLimit(
          /databases/$(database)/documents/users/$(uid)/meta/bucketCounts
        );
        
        // Delete: must decrement counter
        allow delete: if isOwner(uid) && validateBucketDecrement(
          /databases/$(database)/documents/users/$(uid)/meta/bucketCounts
        );
        
        // Update: no counter change required
        allow update: if isOwner(uid);
      }
      
      // Health check documents (temporary test documents)
      match /health-check/{testId} {
        allow read, write: if isOwner(uid);
      }
      
      // Allow any other subcollection under user
      match /{document=**} {
        allow read, write: if isOwner(uid);
      }
    }
    
    // Deny all other access patterns
    match /{document=**} {
      allow read, write: if false;
    }
  }
}